let test_bind = func() {
	let f = func(x, y, z) {
		println(x, y, z);
	};

	let g = bind(f, 1, 2);
	g(3);
};

let test_constant = func() {
	let f = constant("hello world");
	println(f(1, 2, 3));
};

let test_compose = func() {
	let f1 = func(x) { 
		return x + 1;
	};

	let f2 = func(x) {
		return x - 1;
	};

	let f3 = func(x) {
		return x * 2;
	};

	let g = compose(f1, f2, f3);
	println(g(3));
};

let test_id = func() {
	let x = 2;
	println(id(x));
};

let test_transform = func() {
	var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];

	let transform = func(count) {
		if (count < 0) {
			return;
		}

		arr[count] ^= 2;
		transform(count - 1);
	};

	transform(length(arr) - 1);
	println(arr);
};

let test_map = func() {
	let arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];

	let map = func(arr, f) {
		var new_arr = [];
		let count = arr.length;
		let map_helper = func(i) {
			if (i == count) {
				return;
			}

			new_arr.push(f(arr[i]));
			map_helper(i + 1);
		};
		
		map_helper(0);
		return new_arr;
	};

	let mapped_arr = map(arr, func(x) { return x ^ 2; });
	println(mapped_arr);
};

test_bind();
test_constant();
test_compose();
test_id();
test_transform();
test_map();
